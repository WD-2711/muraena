# make all 时先运行 build
all: build

# make 之前先调用 pre
pre:
	mkdir -p build
    # 根据 go.mod 来下载依赖项
	env GO111MODULE=on go get -d ./

# 运行 build 前先运行 pre
build: pre
	go build -o build/muraena .

# 有竞争检测功能
build_with_race_detector: pre
	go build -race -o build/muraena .

buildall: pre
	env GO111MODULE=on GOOS=darwin GOARCH=amd64 go build -o build/macos/muraena .
	env GO111MODULE=on GOOS=linux GOARCH=amd64 go build -o build/linux/muraena .
	env GO111MODULE=on GOOS=windows GOARCH=amd64 go build -o  build/windows/muraena.exe .

update:
	# 将依赖项更新到最新版本
	go get -u
	# 将依赖项复制到项目本地的 vendor 目录中，目的是创建一个本地的依赖项库，使得项目可以在不依赖于外部的情况下进行构建和编译
	go mod vendor
	# 整理和更新项目的模块依赖关系
	go mod tidy
	# 添加更改依赖的消息到 github
	@git commit go.mod go.sum -m "Bump dependencies 📈"

lint: fmt
	# 将简化的代码推到 github
	@git add . && git commit -a -m "Code linting :star2:"

fmt:
	# 简化代码并重写
	gofmt -s -w core log session module module/crawler module/necrobrowser module/statichttp module/tracking module/watchdog

# 表示 all build build_with_race_detector lint fmt 是命令，而不是文件
.PHONY: all build build_with_race_detector lint fmt
